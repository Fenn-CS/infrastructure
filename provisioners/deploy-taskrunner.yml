---
- name: Perform taskrunner deployment steps
  hosts: default
  become: true
  vars:
    repos:
        - api
        - daemon
        - library
        - task-runner
    temp_dir: /data/tmp/www
    deploy_dir: /data/www
  tasks:
    - name: Create minute cron dir
      file:
        path: /etc/cron.minute
        state: directory
        mode: '0755'
    - name: Add minute crontab
      cron:
        cron_file: /etc/crontab
        user: root
        name: minute crontab
        job: "cd / && run-parts --report /etc/cron.minute"
    - name: Copy packages from S3
      become_user: deployer
      command: "aws s3 cp s3://permanent-repos/{{ perm_env }}/{{ item }}.tar.gz {{ temp_dir }}/{{ item }}.tar.gz"
      loop: "{{ repos }}"
    - name: Create temp untar dir
      become_user: deployer
      file:
        path: "{{ temp_dir }}"
        state: directory
    - name: Untar packages
      unarchive:
         src: "{{ temp_dir }}/{{ item }}.tar.gz"
         dest: "{{ temp_dir }}"
         remote_src: yes
      loop: "{{ repos }}"
    - name: Rsync temprorary directory to deployment directory
      become_user: deployer
      synchronize:
        src: "{{ temp_dir }}/{{ item }}"
        dest: "{{ deploy_dir }}/{{ item }}"
        recursive: yes
        delete: yes
      delegate_to: "{{ inventory_hostname }}"
      loop: "{{ repos }}"
    - name: Remove temporary directory
      become_user: deployer
      file:
        path: "{{ temp_dir }}"
        state: absent
    - name: Change file permissions
      file:
        path: "{{ deploy_dir }}"
        state: directory
        recurse: yes
        owner: www-data
        group: deployer
    - name: Create cronjobs
      copy:
        src: "{{ deploy_dir }}/task-runner/scripts/{{ item }}"
        dest: "/etc/cron.{{ item }}"
        owner: www-data
        group: deployer
        mode: "0744"
        remote_src: yes
      loop:
        - minute/disk-check
        - hourly/system-check
    - name: Create daemon service files
      copy:
        src: "{{ deploy_dir }}/daemon/scripts/{{ item }}"
        dest: "/etc/systemd/system/{{ item }}"
        owner: www-data 
        group: deployer
        mode: "0644"
        remote_src: yes
      loop:
        - queue-daemon.service
        - process-daemon.service
        - sqs-daemon.service
        - video-daemon.service
    - name: Enable and stop all services
      service:
        name: "{{ item }}"
        enabled: yes
        state: stopped
      loop:
        - queue-daemon.service
        - process-daemon.service
        - sqs-daemon.service
        - video-daemon.service
    - name: Start all services
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - queue-daemon.service
        - process-daemon.service
        - sqs-daemon.service
        - video-daemon.service
